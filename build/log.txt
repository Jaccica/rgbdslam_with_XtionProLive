[ 50%] Built target slambase
[100%] Building CXX object src/CMakeFiles/main.dir/main.cpp.o
In file included from /usr/include/eigen3/Eigen/Core:277:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:11,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, 4, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, 4, 1>’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:287:16:   required from ‘class Eigen::Quaternion<float>’
/usr/include/eigen3/Eigen/src/Geometry/arch/Geometry_SSE.h:35:3:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 4, 1>’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:287:16:   required from ‘class Eigen::Quaternion<double>’
/usr/include/eigen3/Eigen/src/Geometry/arch/Geometry_SSE.h:76:3:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, -1, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, -1, 1>’
/usr/include/pcl-1.7/pcl/point_cloud.h:90:69:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, -1, -1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, -1, -1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:86:43:   required from ‘struct Eigen::internal::traits<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:46:54:   required from ‘struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:123:75:   required from ‘class Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >’
/usr/include/pcl-1.7/pcl/point_cloud.h:353:7:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >’
/usr/include/pcl-1.7/pcl/point_cloud.h:353:7:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<float, -1, -1>, 1, Eigen::OuterStride<> >’
/usr/include/pcl-1.7/pcl/point_cloud.h:377:7:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, 3, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:86:43:   required from ‘struct Eigen::internal::traits<Eigen::Map<Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:46:54:   required from ‘struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:123:75:   required from ‘class Eigen::Map<Eigen::Matrix<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 3, 1> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 3, 1> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<float, 3, 1> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<float, 4, 1>, 1, Eigen::Stride<0, 0> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Array<float, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Array.h:55:7:   required from ‘class Eigen::Array<float, 3, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:86:43:   required from ‘struct Eigen::internal::traits<Eigen::Map<Eigen::Array<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:46:54:   required from ‘struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Array<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:123:75:   required from ‘class Eigen::Map<Eigen::Array<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Array<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<Eigen::Array<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<float, 3, 1> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<float, 3, 1> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Array<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Array<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<const Eigen::Array<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Array<float, 3, 1> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Array<float, 3, 1> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Array<float, 4, 1> >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<float, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<float, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Array.h:55:7:   required from ‘class Eigen::Array<float, 4, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:86:43:   required from ‘struct Eigen::internal::traits<Eigen::Map<Eigen::Array<float, 4, 1>, 1> >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:46:54:   required from ‘struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Array<float, 4, 1>, 1> >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:123:75:   required from ‘class Eigen::Map<Eigen::Array<float, 4, 1>, 1>’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Array<float, 4, 1>, 1> >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<Eigen::Array<float, 4, 1>, 1> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<float, 4, 1>, 1>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Array<float, 4, 1>, 1>, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Array<float, 4, 1>, 1>’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Array<float, 4, 1>, 1> >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Map<const Eigen::Array<float, 4, 1>, 1> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Array<float, 4, 1>, 1>, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Array<float, 4, 1>, 1>’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:224:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, 3, 1>’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:498:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, 4, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, 4, 1>’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:503:5:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, 3, 3> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, 3, 3>’
/usr/include/eigen3/Eigen/src/Core/Map.h:86:43:   required from ‘struct Eigen::internal::traits<Eigen::Map<Eigen::Matrix<float, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:46:54:   required from ‘struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Matrix<float, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h:123:75:   required from ‘class Eigen::Map<Eigen::Matrix<float, 3, 3> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:1226:58:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<float, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 3, 3> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<float, 3, 3> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<float, 3, 3> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:1226:58:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<float, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<float, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<float, 3, 3> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<float, 3, 3> >’
/usr/include/pcl-1.7/pcl/impl/point_types.hpp:1227:76:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, 4, 1> >’
/usr/include/pcl-1.7/pcl/io/file_io.h:179:69:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<float, 4, 4> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<float, 4, 4> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<float, 4, 4> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<float, 4, 4>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:237:14:   required from ‘class Eigen::Transform<float, 3, 2>’
/usr/include/pcl-1.7/pcl/correspondence.h:142:21:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 4>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 4> >::<anonymous enum>’ [-Wenum-compare]
In file included from /usr/include/eigen3/Eigen/Geometry:44:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:12,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h: In instantiation of ‘struct Eigen::internal::transform_traits<Eigen::Transform<float, 3, 2> >’:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:46:68:   required from ‘class Eigen::Transform<float, 3, 2>’
/usr/include/pcl-1.7/pcl/correspondence.h:142:21:   required from here
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:40:25: warning: comparison between ‘enum Eigen::Transform<float, 3, 2>::<anonymous>’ and ‘enum Eigen::TransformTraits’ [-Wenum-compare]
     IsProjective = (Mode==Projective)
                         ^
In file included from /usr/include/eigen3/Eigen/Core:277:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:11,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 4, 4> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 4, 4> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 4, 4>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:237:14:   required from ‘class Eigen::Transform<double, 3, 2>’
/usr/include/pcl-1.7/pcl/common/eigen.h:791:68:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 4>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 4> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
In file included from /usr/include/eigen3/Eigen/Geometry:44:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:12,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h: In instantiation of ‘struct Eigen::internal::transform_traits<Eigen::Transform<double, 3, 2> >’:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:46:68:   required from ‘class Eigen::Transform<double, 3, 2>’
/usr/include/pcl-1.7/pcl/common/eigen.h:791:68:   required from here
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:40:25: warning: comparison between ‘enum Eigen::Transform<double, 3, 2>::<anonymous>’ and ‘enum Eigen::TransformTraits’ [-Wenum-compare]
     IsProjective = (Mode==Projective)
                         ^
In file included from /usr/include/eigen3/Eigen/Core:277:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:11,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, -1, -1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, -1, -1>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:85:31:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:126:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 13>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<int, -1, -1>, 3, 13, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>, const Eigen::Matrix<int, -1, -1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>, const Eigen::Matrix<int, -1, -1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<int>, const Eigen::Matrix<int, -1, -1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>, const Eigen::Matrix<int, -1, -1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:127:54:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:229:74:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayWrapper.h:49:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:229:74:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:311:120:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:331:91:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Array<int, 4, 1> >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::Array<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Array<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Array.h:55:7:   required from ‘class Eigen::Array<int, 4, 1>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:333:47:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayWrapper.h:49:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:333:47:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<std::less_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<std::less_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<std::less_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<std::less_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:333:49:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<std::less_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<std::greater_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<std::greater_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<std::greater_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<std::greater_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:333:93:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<std::greater_equal<int>, const Eigen::Array<int, 4, 1>, const Eigen::ArrayWrapper<Eigen::Matrix<int, 4, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:334:65:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:334:72:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, 4, 1> >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:513:40:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > >’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:541:74:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Array<float, 4, 1> >, const Eigen::ArrayWrapper<Eigen::Matrix<float, 4, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<float, 4, 1>, 3>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:562:52:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<float, 4, 1>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<int, 4, 1>, 3>’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:590:57:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<int, 4, 1>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/usr/local/include/g2o/core/jacobian_workspace.h:87:38:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 3, 1>’
/usr/local/include/g2o/core/base_edge.h:96:39:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, -1>’
/usr/local/include/g2o/core/base_edge.h:155:23:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 3, 3> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 3, 3>’
/usr/local/include/g2o/types/slam3d/se3_ops.hpp:27:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 2, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 2, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 2, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 2, 1>’
/usr/local/include/g2o/types/slam3d/se3_ops.hpp:49:37:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:117:22:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:123:28:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 7, 1, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 7, 1, 0> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 7, 1, 0> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 7, 1, 0>’
/usr/local/include/g2o/types/slam3d/se3quat.h:135:39:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<7, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 7, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 6, 1, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 6, 1, 0> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 6, 1, 0> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 6, 1, 0>’
/usr/local/include/g2o/types/slam3d/se3quat.h:152:46:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:38:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:45:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:45:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:69:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:74:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’
/usr/local/include/g2o/types/slam3d/se3quat.h:191:74:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6>’
/usr/local/include/g2o/types/slam3d/se3quat.h:202:25:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:237:39:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:237:53:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’
/usr/local/include/g2o/types/slam3d/se3quat.h:246:35:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’
/usr/local/include/g2o/types/slam3d/se3quat.h:247:46:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 6, 6, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 6, 6, 0> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 6, 6, 0> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 6, 6, 0>’
/usr/local/include/g2o/types/slam3d/se3quat.h:257:7:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 6, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true>’
/usr/local/include/g2o/types/slam3d/se3quat.h:260:26:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 6, 6, 0>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/types/slam3d/se3quat.h:263:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true>’
/usr/local/include/g2o/types/slam3d/se3quat.h:271:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>’
/usr/local/include/g2o/types/slam3d/se3quat.h:272:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1>’
/usr/local/include/g2o/types/slam3d/se3quat.h:272:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
In file included from /usr/include/eigen3/Eigen/Geometry:44:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:12,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h: In instantiation of ‘struct Eigen::internal::transform_traits<Eigen::Transform<double, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:46:68:   required from ‘class Eigen::Transform<double, 3, 1>’
/usr/local/include/g2o/types/slam3d/se3quat.h:288:7:   required from here
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:40:25: warning: comparison between ‘enum Eigen::Transform<double, 3, 1>::<anonymous>’ and ‘enum Eigen::TransformTraits’ [-Wenum-compare]
     IsProjective = (Mode==Projective)
                         ^
In file included from /usr/include/eigen3/Eigen/Core:277:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:11,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true>’
/usr/local/include/g2o/types/slam3d/se3quat.h:290:28:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:58:75:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, 3, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, 3, 3>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:73:59:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, 3, 3> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 6>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:73:61:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 3, 3, 1, 3, 3> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 3, 3, 1, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 3, 1, 3, 3> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 3, 3, 1, 3, 3>’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:230:25:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 6>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:73:61:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3, 1, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >’
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:77:52:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:88:19:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 6, 6, 0>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 6, 6, 0>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 6, 0>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 6, 0>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 6, 6, 0>, 1, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_vertex.h:104:22:   required from ‘class g2o::BaseVertex<6, Eigen::Transform<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:50:49:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 6, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:67:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<7, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 7, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 7, 1, 0>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:73:35:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<7, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 7, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:83:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:89:35:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 1, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:94:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_vertex.h:104:22:   required from ‘class g2o::BaseVertex<3, Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/vertex_pointxyz.h:38:54:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_pointxyz.h:49:50:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/types/slam3d/vertex_pointxyz.h:60:38:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 3, 6, 0, 3, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 3, 6, 0, 3, 6> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 6, 0, 3, 6> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 3, 6, 0, 3, 6>’
/usr/local/include/g2o/core/base_binary_edge.h:52:107:   required from ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSE3, g2o::VertexPointXYZ>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:43:55:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 6, 0, 3, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 6, 3, 0, 6, 3> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 6, 3, 0, 6, 3> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 6, 3, 0, 6, 3> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 6, 3, 0, 6, 3>’
/usr/local/include/g2o/core/base_binary_edge.h:58:102:   required from ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSE3, g2o::VertexPointXYZ>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:43:55:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 3, 0, 6, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 6, 3, 0, 6, 3>, 1, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_binary_edge.h:107:24:   required from ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSE3, g2o::VertexPointXYZ>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:43:55:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 3, 0, 6, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_binary_edge.h:108:34:   required from ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSE3, g2o::VertexPointXYZ>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:43:55:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 6, 0, 3, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 3, 3>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, 3, 3>, 1, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_binary_edge.h:110:27:   required from ‘class g2o::BaseBinaryEdge<3, Eigen::Matrix<double, 3, 1>, g2o::VertexSE3, g2o::VertexPointXYZ>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:43:55:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 3, 9, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 3, 9, 0> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, 3, 9, 0> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, 3, 9, 0>’
/usr/local/include/g2o/types/slam3d/edge_se3_pointxyz.h:86:47:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 9>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 9, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/edge_pointxyz.h:47:47:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/types/slam3d/edge_pointxyz.h:47:50:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_multi_edge.h:56:30:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/base_multi_edge.hpp:191:12:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > >’
/usr/local/include/g2o/core/base_multi_edge.hpp:206:71:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, -1> >’
/usr/local/include/g2o/core/base_multi_edge.hpp:206:71:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/usr/local/include/g2o/core/matrix_operations.h:38:62:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1>’
/usr/local/include/g2o/core/matrix_operations.h:50:31:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1>’
/usr/local/include/g2o/core/matrix_operations.h:50:64:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>, Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>’
/usr/local/include/g2o/core/matrix_operations.h:50:64:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>, Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >’
/usr/local/include/g2o/core/matrix_operations.h:68:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:76:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/Product.h:318:7:   required from ‘class Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>’
/usr/local/include/g2o/core/matrix_operations.h:68:76:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>, Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<int, -1, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<int, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<int, -1, 1>’
/usr/local/include/g2o/solvers/csparse/linear_solver_csparse.h:243:14:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<int, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp: In function ‘int main()’:
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:104:15: error: ‘currIndex’ was not declared in this scope
     v->setId( currIndex );
               ^
In file included from /usr/include/eigen3/Eigen/Core:277:0,
                 from /home/liuqin/Documents/openni_rgbdslam/include/slamBase.h:11,
                 from /home/liuqin/Documents/openni_rgbdslam/src/main.cpp:7:
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6, 0> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 6, 6, 0> >’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:300:86:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 6, 0> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<float>, const Eigen::Matrix<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<float>, const Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_quotient1_op<float>, const Eigen::Matrix<float, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<float>, const Eigen::Matrix<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:156:12:   required from ‘const PlainObject Eigen::MatrixBase<Derived>::normalized() const [with Derived = Eigen::Matrix<float, 3, 1>; Eigen::MatrixBase<Derived>::PlainObject = Eigen::Matrix<float, 3, 1>; typename Eigen::internal::traits<T>::Scalar = float]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:50:65:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:103:19:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:71:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:8:   required from ‘struct Eigen::internal::traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/g2o/types/slam3d/se3quat.h:279:23:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/g2o/types/slam3d/se3quat.h:279:23:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 4, 4> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 4, 4> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 4, 4> >’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:482:43:   required from ‘static const Eigen::Transform<Scalar, Dim, Mode, _Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::Identity() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:60:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 4>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 4> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:87:34:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:87:34:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayWrapper.h:49:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:88:26:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:89:57:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6>’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:89:61:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1120:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > > >’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:63:34:   required from ‘class Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:284:8:   required from ‘struct Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1132:72:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1132:9:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1132:58:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/vertex_pointxyz.h:50:19:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:68:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:573:7:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:247:18:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform() [with _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:65:19:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1273:69:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>, const Eigen::Matrix<float, 3, 1>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>, const Eigen::Matrix<float, 3, 1>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>, const Eigen::Matrix<float, 3, 1>&, 6>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1273:69:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 3, false, true>, const Eigen::Matrix<float, 3, 1>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1273:56:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1274:56:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:47:121:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >; U = Eigen::Matrix<int, 4, 1>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = int]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:86:71:   required from ‘typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<int, 4, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >; typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = int]’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:624:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true>’
/usr/include/eigen3/Eigen/src/Core/CommaInitializer.h:56:51:   required from ‘Eigen::CommaInitializer<MatrixType>::CommaInitializer(XprType&, const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true>; XprType = Eigen::Matrix<int, 4, 1>]’
/usr/include/eigen3/Eigen/src/Core/CommaInitializer.h:147:72:   required from ‘Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<int, -1, -1>, -1, 1, true, true>; Derived = Eigen::Matrix<int, 4, 1>]’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:646:91:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<int, 4, 1>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:47:121:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >; U = Eigen::Matrix<int, 4, 1>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = int]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:86:71:   required from ‘typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<int, 4, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >; typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = int]’
/usr/include/pcl-1.7/pcl/filters/voxel_grid.h:649:87:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<int, int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>, const Eigen::Matrix<int, 4, 1>, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> >, const Eigen::Matrix<int, 4, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:52:20:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, 3, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:140:37:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, 3, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/local/include/g2o/types/slam3d/se3quat.h:229:35:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1375:33:   required from ‘static Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::run(const Lhs&, const Rhs&) [with Scalar = double; int Dim = 3; int LhsMode = 1; int LhsOptions = 0; int RhsMode = 1; int RhsOptions = 0; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Lhs = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Rhs = Eigen::Transform<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:461:92:   required from ‘const Eigen::Transform<Scalar, Dim, Mode, _Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::Transform<Scalar, Dim, Mode, _Options>&) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:109:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1376:38:   required from ‘static Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::run(const Lhs&, const Rhs&) [with Scalar = double; int Dim = 3; int LhsMode = 1; int LhsOptions = 0; int RhsMode = 1; int RhsOptions = 0; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Lhs = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Rhs = Eigen::Transform<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:461:92:   required from ‘const Eigen::Transform<Scalar, Dim, Mode, _Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::Transform<Scalar, Dim, Mode, _Options>&) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:109:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>, const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>, const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>, const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>, const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1376:58:   required from ‘static Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::run(const Lhs&, const Rhs&) [with Scalar = double; int Dim = 3; int LhsMode = 1; int LhsOptions = 0; int RhsMode = 1; int RhsOptions = 0; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::ResultType = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Lhs = Eigen::Transform<double, 3, 1>; Eigen::internal::transform_transform_product_impl<Eigen::Transform<Scalar, Dim, Mode, Options>, Eigen::Transform<Scalar, Dim, RhsMode, RhsOptions>, false>::Rhs = Eigen::Transform<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:461:92:   required from ‘const Eigen::Transform<Scalar, Dim, Mode, _Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::Transform<Scalar, Dim, Mode, _Options>&) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:109:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CoeffBasedProduct<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true>, 6>, const Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:142:32:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator-=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:88:28:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 3, 3>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/isometry3d_mappings.h:89:50:   required from ‘void g2o::internal::approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/local/include/g2o/types/slam3d/vertex_se3.h:112:95:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, Eigen::CoeffBasedProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >, const Eigen::Matrix<double, 3, 3>&, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true>’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:573:7:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1133:5:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<float>, const Eigen::Matrix<float, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<float>, const Eigen::Matrix<float, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<float>, const Eigen::Matrix<float, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<float>, const Eigen::Matrix<float, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<float, 3, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = float]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:140:37:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<float, 3, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = float]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:156:12:   required from ‘const PlainObject Eigen::MatrixBase<Derived>::normalized() const [with Derived = Eigen::Matrix<float, 3, 1>; Eigen::MatrixBase<Derived>::PlainObject = Eigen::Matrix<float, 3, 1>; typename Eigen::internal::traits<T>::Scalar = float]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:50:65:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<float, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>’
/usr/include/eigen3/Eigen/src/Core/VectorwiseOp.h:433:20:   required from ‘ExpressionType& Eigen::VectorwiseOp<ExpressionType, Direction>::operator+=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true>; ExpressionType = Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>; int Direction = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1274:56:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, 4, 1>, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, 4, 1>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, 4, 1>, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, 4, 1>, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Matrix<double, 4, 1>, 3>’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:487:37:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(Eigen::QuaternionBase<Derived>::Vector3) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:141:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:85:112:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:103:29:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, 4, 1>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:489:14:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(Eigen::QuaternionBase<Derived>::Vector3) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:141:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:85:112:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:103:29:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:489:31:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(Eigen::QuaternionBase<Derived>::Vector3) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:141:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/RotationBase.h:85:112:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:103:29:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true>; Eigen::DenseBase<Derived>::Scalar = float]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:573:7:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:247:18:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform() [with _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:65:19:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<float, 4, 4>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<float>, Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<float>, Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<float>, Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>]’
/usr/include/eigen3/Eigen/src/Core/VectorwiseOp.h:433:22:   required from ‘ExpressionType& Eigen::VectorwiseOp<ExpressionType, Direction>::operator+=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true>; ExpressionType = Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>; int Direction = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1274:56:   required from ‘static Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::run(const TransformType&, const MatrixType&) [with TransformType = Eigen::Transform<float, 3, 2>; MatrixType = Eigen::Matrix<float, 3, 1>; Eigen::internal::transform_right_product_impl<TransformType, MatrixType, 2>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:408:102:   required from ‘const typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType Eigen::Transform<Scalar, Dim, Mode, _Options>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; _Scalar = float; int _Dim = 3; int _Mode = 2; int _Options = 0; typename Eigen::internal::transform_right_product_impl<Eigen::Transform<Scalar, Dim, Mode, _Options>, OtherDerived>::ResultType = Eigen::Matrix<float, 3, 1>]’
/usr/include/pcl-1.7/pcl/common/impl/eigen.hpp:122:48:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>, Eigen::Block<Eigen::Block<Eigen::Matrix<float, 3, 1>, 3, 1, false, true>, 3, 1, true, true>, Eigen::Block<const Eigen::Matrix<float, 4, 4>, 3, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Diagonal<const Eigen::Matrix<double, 3, 3>, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<const Eigen::Matrix<double, 3, 3>, 0> >’
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:77:52:   required from ‘class Eigen::Diagonal<const Eigen::Matrix<double, 3, 3>, 0>’
/usr/include/eigen3/Eigen/src/Core/Redux.h:401:35:   required from ‘typename Eigen::internal::traits<T>::Scalar Eigen::MatrixBase<Derived>::trace() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:716:26:   required from ‘static void Eigen::internal::quaternionbase_assign_impl<Other, 3, 3>::run(Eigen::QuaternionBase<OtherDerived>&, const Other&) [with Derived = Eigen::Quaternion<double>; Other = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:530:80:   required from ‘Derived& Eigen::QuaternionBase<Derived>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Quaternion<double>]’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:274:72:   required from ‘Eigen::Quaternion<Scalar, Options>::Quaternion(const Eigen::MatrixBase<OtherDerived>&) [with Derived = Eigen::Matrix<double, 3, 3>; _Scalar = double; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/se3quat.h:55:76:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<const Eigen::Matrix<double, 3, 3>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:744:5:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, true>::run(Derived&) [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:763:60:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:270:40:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 4>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 4> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 4, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 4, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 4, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Matrix<double, 4, 1> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, 4, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:140:37:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, 4, 1>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/include/eigen3/Eigen/src/Core/Dot.h:168:17:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, 4, 1>]’
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:130:29:   required from ‘void Eigen::QuaternionBase<Derived>::normalize() [with Derived = Eigen::Quaternion<double>]’
/usr/local/include/g2o/types/slam3d/se3quat.h:281:22:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<4, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:956:3:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:270:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/se3quat.h:289:51:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:573:7:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1133:5:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true>’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:166:73:   required from ‘static void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:305:70:   required from ‘void Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; MatrixType = Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; Derived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> >’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:166:73:   required from ‘static void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:305:70:   required from ‘void Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; MatrixType = Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; Derived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 3, 1, true, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true>’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:147:17:   required from ‘void Eigen::internal::compute_inverse_size3_helper(const MatrixType&, const typename ResultType::Scalar&, const Eigen::Matrix<typename ResultType::Scalar, 3, 1>&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; typename ResultType::Scalar = double]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:168:72:   required from ‘static void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:305:70:   required from ‘void Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; MatrixType = Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; Derived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:115:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:133:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, 1>’
/usr/include/eigen3/Eigen/src/Core/Map.h:117:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >’
/usr/include/eigen3/Eigen/src/Core/Product.h:446:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:124:63:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:115:85:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:133:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/Product.h:464:29:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:124:63:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:115:85:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:133:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/Assign.h:542:125:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, true>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>, 1, 3, false, true>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:574:89:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/LU/Inverse.h:168:72:   required from ‘static void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:305:70:   required from ‘void Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; MatrixType = Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; Derived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/Product.h:464:14:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/Product.h:340:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:124:63:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:115:85:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:133:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/include/eigen3/Eigen/src/Core/Product.h:446:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:124:63:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:115:85:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ProductBase.h:133:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:162:52:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>]’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:236:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:50:33:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, 3, 1>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/util/BlasUtil.h:238:13:   required from ‘struct Eigen::internal::blas_traits<Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:353:62:   required from ‘struct Eigen::internal::check_transpose_aliasing_compile_time_selector<false, Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:421:87:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/LU/Inverse.h:168:72:   required from ‘static void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:305:70:   required from ‘void Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; MatrixType = Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>; Derived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Block<const Eigen::Matrix<double, 4, 4>, 3, 3, false, true> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false, true>]’
/usr/include/eigen3/Eigen/src/Geometry/Transform.h:1124:54:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options> Eigen::Transform<Scalar, Dim, Mode, _Options>::inverse(Eigen::TransformTraits) const [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/g2o/types/slam3d/edge_se3.h:29:41:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, 3, 1> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> > > >’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:63:34:   required from ‘class Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> > >’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:284:8:   required from ‘struct Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> >’
/usr/local/include/g2o/core/block_solver.hpp:386:10:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>’
/usr/local/include/g2o/core/block_solver.hpp:404:43:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 6>’
/usr/local/include/g2o/core/block_solver.hpp:410:28:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, 6, 3, 0, 6, 3>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >’
/usr/local/include/g2o/core/block_solver.hpp:426:36:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 6>’
/usr/local/include/g2o/core/block_solver.hpp:426:36:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >’
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:77:52:   required from ‘class Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0>’
/usr/local/include/g2o/core/block_solver.hpp:573:30:   required from ‘bool g2o::BlockSolver<Traits>::setLambda(double, bool) [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayWrapper.h:49:7:   required from ‘class Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >’
/usr/local/include/g2o/core/block_solver.hpp:574:27:   required from ‘bool g2o::BlockSolver<Traits>::setLambda(double, bool) [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >’
/usr/local/include/g2o/core/base_vertex.hpp:37:121:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > >’
/usr/local/include/g2o/core/base_vertex.hpp:37:63:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Map<Eigen::Matrix<double, 3, 3>, 0, Eigen::Stride<0, 0> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:63:34:   required from ‘class Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> > >’
/usr/include/eigen3/Eigen/src/misc/Solve.h:45:60:   required from ‘struct Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:319:8:   required from ‘struct Eigen::internal::solve_retval<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:91:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = const Eigen::Matrix<double, 3, 1>&; int NestingFlags = 6; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/usr/local/include/g2o/core/block_solver.hpp:410:20:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256>’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >; int NestingFlags = 6; ExpressionType = Eigen::Matrix<double, 6, 6, 0>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/g2o/core/block_solver.hpp:426:28:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> > > >’:
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:52:34:   required from ‘class Eigen::ArrayBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> > > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_add_op<double>, const Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> > >’
/usr/include/eigen3/Eigen/src/Core/ArrayBase.h:140:32:   required from ‘Derived& Eigen::ArrayBase<Derived>::operator+=(const Scalar&) [with Derived = Eigen::ArrayWrapper<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >; Eigen::ArrayBase<Derived>::Scalar = double]’
/usr/local/include/g2o/core/block_solver.hpp:574:27:   required from ‘bool g2o::BlockSolver<Traits>::setLambda(double, bool) [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Diagonal<Eigen::Matrix<double, 6, 6, 0>, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 6, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 6, 0> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 6, 0> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 6, 6, 0>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.hpp:181:9:   required from ‘bool g2o::BlockSolver<Traits>::buildStructure(bool) [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 6, 0> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 3, 0, 6, 3> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 3, 0, 6, 3> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 6, 3, 0, 6, 3> >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:341:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:490:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:240:15:   required from ‘bool g2o::BlockSolver<Traits>::buildStructure(bool) [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, 6, 3, 0, 6, 3> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::Matrix<double, 6, 6, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::Matrix<double, 6, 6, 0> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::Matrix<double, 6, 6, 0> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6, 0>; Derived = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:191:13:   required from ‘bool g2o::SparseBlockMatrix<MatrixType>::add(g2o::SparseBlockMatrix<MatrixType>*&) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.hpp:371:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::Matrix<double, 6, 6, 0> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>; Derived = Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >]’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:91:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = const Eigen::Matrix<double, 3, 1>&; int NestingFlags = 6; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/usr/local/include/g2o/core/block_solver.hpp:410:20:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 1, 0>, 0, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256>; Derived = Eigen::Matrix<double, 6, 6, 0>]’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >; int NestingFlags = 6; ExpressionType = Eigen::Matrix<double, 6, 6, 0>; StorageBase = Eigen::MatrixBase]’
/usr/local/include/g2o/core/block_solver.hpp:426:28:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 6, 0>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, 256> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6>’
/usr/local/include/g2o/core/matrix_operations.h:56:71:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_ccs.h:121:99:   required from ‘void g2o::SparseBlockMatrixCCS<MatrixType>::rightMultiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:474:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>’
/usr/local/include/g2o/core/matrix_operations.h:56:71:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_ccs.h:121:99:   required from ‘void g2o::SparseBlockMatrixCCS<MatrixType>::rightMultiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:474:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>’
/usr/local/include/g2o/core/matrix_operations.h:56:54:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_ccs.h:121:99:   required from ‘void g2o::SparseBlockMatrixCCS<MatrixType>::rightMultiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:474:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>’
/usr/local/include/g2o/core/matrix_operations.h:38:59:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_diagonal.h:97:95:   required from ‘void g2o::SparseBlockMatrixDiagonal<MatrixType>::multiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:478:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6>’
/usr/local/include/g2o/core/matrix_operations.h:38:59:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_diagonal.h:97:95:   required from ‘void g2o::SparseBlockMatrixDiagonal<MatrixType>::multiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:478:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>’
/usr/local/include/g2o/core/matrix_operations.h:38:59:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:276:134:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6>’
/usr/local/include/g2o/core/matrix_operations.h:38:54:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:276:134:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Matrix<double, 6, 6, 0>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >’
/usr/local/include/g2o/core/matrix_operations.h:56:71:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:278:137:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 6>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>’
/usr/local/include/g2o/core/matrix_operations.h:56:71:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:278:137:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:56:54:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_ccs.h:121:99:   required from ‘void g2o::SparseBlockMatrixCCS<MatrixType>::rightMultiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:474:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 3, 0, 6, 3> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:38:54:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/sparse_block_matrix_diagonal.h:97:95:   required from ‘void g2o::SparseBlockMatrixDiagonal<MatrixType>::multiply(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/g2o/core/block_solver.hpp:478:3:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<3, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3, 1, false, true>, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:38:54:   required from ‘void g2o::internal::axpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:276:134:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 6, 0>&, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:235:77:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>]’
/usr/local/include/g2o/core/matrix_operations.h:56:54:   required from ‘void g2o::internal::atxpy(const MatrixType&, const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int, Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >&, int) [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/sparse_block_matrix.hpp:278:137:   required from ‘void g2o::SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*&, const double*) const [with MatrixType = Eigen::Matrix<double, 6, 6, 0>]’
/usr/local/include/g2o/core/block_solver.h:141:77:   required from ‘void g2o::BlockSolver<Traits>::multiplyHessian(double*, const double*) const [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<6, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Transpose<const Eigen::Matrix<double, 6, 6, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 6, 1, false, true>, 6> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:246:41:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:252:16:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:210:35:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:211:35:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:45:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:232:25:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 6>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:45:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:232:25:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, 3, 1> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:65:7:   required from ‘class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:140:7:   required from ‘class Eigen::Matrix<double, -1, 1, 0, 3, 1>’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:230:25:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 6>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:45:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1, 0, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:210:35:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:211:35:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:212:41:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:45:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:251:28:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 6> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 6> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 6>’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:45:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:251:28:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 6> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true>’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:147:17:   required from ‘void Eigen::internal::compute_inverse_size3_helper(const MatrixType&, const typename ResultType::Scalar&, const Eigen::Matrix<typename ResultType::Scalar, 3, 1>&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; ResultType = Eigen::Matrix<double, 3, 3>; typename ResultType::Scalar = double]’
/usr/include/eigen3/Eigen/src/LU/Inverse.h:168:72:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 3>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> >]’
/usr/include/eigen3/Eigen/src/Core/Assign.h:589:3:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:392:34:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:203:34:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/g2o/core/block_solver.hpp:386:10:   required from ‘bool g2o::BlockSolver<Traits>::solve() [with Traits = g2o::BlockSolverTraits<6, 3>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:215:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256>’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >; int NestingFlags = 6; ExpressionType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>; StorageBase = Eigen::MatrixBase]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:38:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:232:25:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:62:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:71:28:   required from ‘struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:45:8:   required from ‘struct Eigen::internal::traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Matrix<double, -1, 1, 0, 3, 1> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:220:21:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:232:25:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:105:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:72:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/Dot.h:128:50:   required from ‘typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true>; typename Eigen::NumTraits<typename Eigen::internal::traits<T>::Scalar>::Real = double]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:215:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:126:7:   required from ‘class Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256>’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >; int NestingFlags = 6; ExpressionType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>; StorageBase = Eigen::MatrixBase]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:38:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:251:28:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:178:109:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:220:21:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::unblocked(MatrixType&) [with MatrixType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:251:28:   required from ‘static typename MatrixType::Index Eigen::internal::llt_inplace<1>::blocked(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>; typename MatrixType::Index = int]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, 3, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >; int NestingFlags = 6; ExpressionType = Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>; StorageBase = Eigen::MatrixBase]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:38:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Matrix<double, 3, 3>, 1, -1, false, true> >, 256> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> > >’
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:58:63:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:221:84:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>]’
/usr/include/eigen3/Eigen/src/Core/NoAlias.h:95:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>; Rhs = Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >; int NestingFlags = 6; ExpressionType = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>; StorageBase = Eigen::MatrixBase]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:219:38:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:282:41:   required from ‘static bool Eigen::internal::LLT_Traits<MatrixType, 1>::inplace_decomposition(MatrixType&) [with MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:311:51:   required from ‘Eigen::LLT<MatrixType, _UpLo>& Eigen::LLT<MatrixType, UpLo>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:101:21:   required from ‘Eigen::LLT<MatrixType, UpLo>::LLT(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1; Eigen::LLT<MatrixType, UpLo>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:373:36:   required from ‘const Eigen::LLT<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::llt() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, 1, false, true>, Eigen::CoeffBasedProduct<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, -1, -1, false, true>, Eigen::Transpose<const Eigen::Block<Eigen::Block<Eigen::Matrix<double, 3, 3>, -1, -1, false, true>, 1, -1, false, true> >, 256> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 0>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<0, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, 3, 1>, 0>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<0, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<0, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 3>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 0>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<0, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   required from ‘static void Eigen::internal::triangular_solver_selector<Lhs, Rhs, 1, Mode, 2, 1>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:191:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<0, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 0, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 0, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, 3, 1>, 1>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 1; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 0; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:146:83:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 1, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 2>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:352:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:352:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:182:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true>, 1>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, 3, 1>, 2>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:352:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = Eigen::Matrix<double, 3, 3>; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 1; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:352:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Matrix<double, 3, 3>, 1, 3, false, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >’
/usr/include/eigen3/Eigen/src/Core/MapBase.h:41:34:   required from ‘class Eigen::MapBase<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true>, 0>’
/usr/include/eigen3/Eigen/src/Core/Block.h:256:7:   required from ‘class Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true>’
/usr/include/eigen3/Eigen/src/Core/VectorBlock.h:70:47:   required from ‘class Eigen::VectorBlock<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 2>’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:353:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:113:37:   required from ‘class Eigen::TransposeImpl<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/Transpose.h:70:37:   required from ‘class Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:353:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> > >::<anonymous enum>’ [-Wenum-compare]
/usr/include/eigen3/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >’:
/usr/include/eigen3/Eigen/src/Core/MatrixBase.h:61:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:176:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true>, Eigen::Dense>’
/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:119:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> >’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:128:23:   required from ‘static void Eigen::internal::triangular_solver_unroller<Lhs, Rhs, Mode, Index, Size, false>::run(const Lhs&, Rhs&) [with Lhs = const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >; Rhs = Eigen::Matrix<double, 3, 1>; int Mode = 2; int Index = 2; int Size = 3]’
/usr/include/eigen3/Eigen/src/Core/SolveTriangular.h:134:71:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:353:3:   required from ‘void Eigen::LLT<MatrixType, UpLo>::solveInPlace(Eigen::MatrixBase<OtherDerived>&) const [with Derived = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int _UpLo = 1]’
/usr/include/eigen3/Eigen/src/Cholesky/LLT.h:328:5:   required from ‘void Eigen::internal::solve_retval<Eigen::LLT<MatrixType, _UpLo>, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _MatrixType = Eigen::Matrix<double, 3, 3>; int UpLo = 1; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/misc/Solve.h:64:5:   required from ‘void Eigen::internal::solve_retval_base<DecompositionType, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; _DecompositionType = Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/include/eigen3/Eigen/src/Core/ReturnByValue.h:74:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/include/eigen3/Eigen/src/Core/Matrix.h:309:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::LLT<Eigen::Matrix<double, 3, 3>, 1>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/g2o/core/base_vertex.hpp:41:71:   required from ‘double g2o::BaseVertex<D, T>::solveDirect(double) [with int D = 3; T = Eigen::Matrix<double, 3, 1>]’
/home/liuqin/Documents/openni_rgbdslam/src/main.cpp:369:1:   required from here
/usr/include/eigen3/Eigen/src/Core/DenseBase.h:172:59: warning: enumeral mismatch in conditional expression: ‘Eigen::internal::size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Transpose<const Eigen::Block<const Eigen::Block<const Eigen::Transpose<const Eigen::Matrix<double, 3, 3> >, 1, 3, true, true>, 1, 2, false, true> >, const Eigen::Block<Eigen::Matrix<double, 3, 1>, 2, 1, false, true> > >::<anonymous enum>’ [-Wenum-compare]
make[2]: *** [src/CMakeFiles/main.dir/main.cpp.o] 错误 1
make[1]: *** [src/CMakeFiles/main.dir/all] 错误 2
make: *** [all] 错误 2
